data("Q5.monthly")
she <- read_excel(file.path(directory, "she_ai.xlsx"))
library(readxl)
library(readxl)
library(dplyr)
library(tidyr)
directory = "./data"
she <- read_excel(file.path(directory, "she_ai.xlsx"))
View(she)
library(readxl)
library(dplyr)
book_equity_df <- read.csv("data/be_op_in.csv")
View(book_equity_df)
library(readxl)
library(dplyr)
library(tidyr)
# All variables needed for ROE
roe_files <- c("./data/6500_qi.xlsx", "./data/0023_qi.xlsx")
roe <- bind_rows(lapply(roe_files, read_excel))
View(roe)
View(roe %>% filter(is.na(RDQ)))
View(roe %>% filter(is.na(RDQ) & FYYYQ > 1990))
View(roe %>% filter(is.na(RDQ) & FYYYYQ > 1990))
View(roe %>% filter(is.na(RDQ) & FYYYYQ > 2000))
at <- read_excel("data/AT_ai.xlsx")
calculate_yyyymm_vectorized <- function(FYYYYQ, FYRQ, data_source = NULL) {
year <- floor(FYYYYQ)
quarter <- round((FYYYYQ - year) * 10)
month <- case_when(
quarter == 4 ~ FYRQ,
quarter == 3 ~ FYRQ - 3,
quarter == 2 ~ FYRQ - 6,
quarter == 1 ~ FYRQ - 9
)
year <- ifelse(month < 1, year - 1, year)
month <- ifelse(month < 1, month + 12, month)
year <- ifelse(FYRQ < 6, year + 1, year)
as.numeric(sprintf("%04d%02d", year, month))
}
# Build BE and date in the form of YYYYMM
roe <- roe %>%
mutate(SHE = coalesce(SEQQ , CEQQ + PSTKQ , ATQ - LTQ),
BVPS = coalesce(PSTKRQ, PSTKQ),
TXDITCQ = coalesce(TXDITCQ, 0),
BE = ifelse((SHE + TXDITCQ - BVPS) > 0, (SHE + TXDITCQ - BVPS), NaN)) %>%
mutate(YYYYMM = calculate_yyyymm_vectorized(FYYYYQ, FYRQ))
# A lengthy process to calculate lag(BE)
roe <- roe %>%
arrange(KYGVKEY, YYYYMM) %>% # use cumsum to mark places of FYRQ changes
group_by(KYGVKEY) %>%
mutate(segment = cumsum(FYRQ != lag(FYRQ, default = first(FYRQ)))) %>%
ungroup() %>%
group_by(KYGVKEY, segment) %>% # Within each gvkey and period of stable FYRQ, lag BE
mutate(be_lag1 = lag(BE)) %>%
ungroup()
at <- at %>%
mutate(
FYYYY = case_when(
FYRA < 6 ~ FYYYY + 1,
TRUE ~ FYYYY
),
YYYYMM = round(FYYYY * 100 + FYRA)) %>%
filter(!is.na(YYYYMM))
# A lengthy process to calculate lag(BE)
at <- at %>%
arrange(KYGVKEY, YYYYMM) %>% # use cumsum to mark places of FYRQ changes
group_by(KYGVKEY) %>%
mutate(segment = cumsum(FYRA != lag(FYRA, default = first(FYRA)))) %>%
ungroup() %>%
group_by(KYGVKEY, segment) %>% # Within each gvkey and period of stable FYRQ, lag AT
mutate(at_lag1 = lag(AT)) %>%
ungroup() %>%
select(KYGVKEY, YYYYMM, AT, at_lag1)
final_output <- roe %>%
mutate(ROE = ifelse(be_lag1 == 0, NA, IBQ / be_lag1)) %>%
filter(!is.na(ROE)) %>%
full_join(at, by = c("KYGVKEY", "YYYYMM")) %>%
mutate(IA = ifelse(is.na(at_lag1), NA, AT / at_lag1)) %>%
select(KYGVKEY, YYYYMM, ROE, IA) %>%
filter(!is.na(YYYYMM))
View(roe)
final_output <- roe %>%
mutate(ROE = ifelse(be_lag1 == 0, NA, IBQ / be_lag1)) %>%
filter(!is.na(ROE)) %>%
full_join(at, by = c("KYGVKEY", "YYYYMM")) %>%
mutate(IA = ifelse(is.na(at_lag1), NA, AT / at_lag1)) %>%
select(KYGVKEY, YYYYMM, ROE, IA, RDQ) %>%
filter(!is.na(YYYYMM))
View(final_output %>% filter(is.na(RDQ)))
min(final_output$RDQ, na.rm = TRUE)
min(roe$RDQE)
min(roe$RDQ)
min(roe$RDQ, na.rm = TRUE)
View(final_output %>% filter(RDQ == min(roe$RDQ, na.rm = TRUE)))
View(final_output %>% filter(RDQ > YYYYMM + 6))
View(final_output %>% filter(RDQ > YYYYMM*100 + 600))
final_output <- final_output %>%
mutate(YYYYMM_date = as.Date(paste0(YYYYMM, "01"), "%Y%m%d"))
# Convert RDQ to Date format
final_output <- final_output %>%
mutate(RDQ_date = as.Date(as.character(RDQ), "%Y%m%d"))
# Filter for rows where RDQ_date is more than 6 months after YYYYMM_date
filtered_output <- final_output %>%
filter(RDQ_date > (YYYYMM_date %m+% months(6)))
library(lubridate)
# Filter for rows where RDQ_date is more than 6 months after YYYYMM_date
filtered_output <- final_output %>%
filter(RDQ_date > (YYYYMM_date %m+% months(6)))
# View the filtered output
View(filtered_output)
# Filter for rows where RDQ_date is more than 6 months after YYYYMM_date
filtered_output <- final_output %>%
filter(RDQ_date > (YYYYMM_date %m+% months(3)))
# View the filtered output
View(filtered_output)
final_output <- roe %>%
mutate(ROE = ifelse(be_lag1 == 0, NA, IBQ / be_lag1)) %>%
filter(!is.na(ROE)) %>%
full_join(at, by = c("KYGVKEY", "YYYYMM")) %>%
mutate(IA = ifelse(is.na(at_lag1), NA, AT / at_lag1)) %>%
select(KYGVKEY, YYYYMM, ROE, IA, RDQ) %>%
filter(!is.na(YYYYMM))
View(final_output)
write.csv(final_output, "data/ROE_IA.csv", row.names = FALSE)
write.rds(final_output, "data/ROE_IA.rds", row.names = FALSE)
saveRDS(final_output, "data/ROE_IA.rds")
roe_ia <- readRDS("data/ROE_IA.rds")
View(roe_ia)
library(readxl)
library(dplyr)
library(lubridate)
library(zoo)
mktcap <- read.csv("../FF5_Replciation/mkt_cap/mktcap_combined.csv")
mthret <- read.csv("../FF5_Replciation/four_factor_combined/data/mthret.csv")
exch <- readRDS("../FF5_Replciation/mkt_cap/data/sfz_agg_mth_short.rds") %>%
select(KYPERMNO, YYYYMM, PRIMEXCH)
primiss_files <- c("6070", "7078", "7885", "8590", "9095", "9500", "0004", "0408", "p0812", "p1216","p1620","p2023")
primiss_files <- paste0("../FF5_Replciation/four_factor_combined/primiss/", primiss_files, "_ms.xlsx")
primiss <- bind_rows(lapply(primiss_files, read_excel))
primiss <- primiss %>%
mutate(
DATADATE = as.Date(as.character(DATADATE), "%Y-%m-%d"),
YYYYMM = as.numeric(format(DATADATE, "%Y%m"))
) %>%
filter(PRIMISS == 'P') %>%
select(KYPERMNO, YYYYMM) %>%
distinct()
mthret <- mthret %>%
left_join(exch, by = c("KYPERMNO", "YYYYMM")) %>%
filter(PRIMEXCH == "N" | PRIMEXCH == "A" | PRIMEXCH == "Q") %>%
inner_join(primiss, by = c("KYPERMNO", "YYYYMM")) %>% # use primary stock
select(KYPERMNO, KYGVKEY, YYYYMM, MTHRET, return_date = MCALDT, PRIMEXCH)
# Create the value column for value-weighted portfolios
size <- mktcap %>%
mutate(SIZE = coalesce(MKVALTQ, MTHCAP, CSHOQ_PRCCM)) %>%
filter(!is.na(SIZE) & SIZE != 0) %>%
select(KYGVKEY, YYYYMM, SIZE) %>%
group_by(KYGVKEY, YYYYMM) %>%
summarize(value = mean(SIZE, na.rm = TRUE)) %>%
ungroup()
# New column of only June value for SIZE factor. Assign it to the next month.
size <- size %>%
left_join(size %>% filter(YYYYMM %% 100 == 6 & !is.na(value)) %>%
select(KYGVKEY, YYYYMM, SIZE = value) %>%
mutate(YYYYMM = YYYYMM + 1),
by = c("KYGVKEY","YYYYMM"))
# Join SIZE and roe_ia
combined_df <- size %>%
left_join(roe_ia, by = c("KYGVKEY", "YYYYMM"))
View(combined_df)
